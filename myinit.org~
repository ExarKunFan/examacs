* interface tweaks
** Interface
   #+BEGIN_SRC emacs-lisp
   (scroll-bar-mode 0)
   (tool-bar-mode 0)
   (global-display-line-numbers-mode 1)
   #+END_SRC
** Telephone line
   #+BEGIN_SRC emacs-lisp
     (require 'telephone-line)
     (setq telephone-line-primary-left-separator 'telephone-line-gradient
	   telephone-line-secondary-left-separator 'telephone-line-nil
	   telephone-line-primary-right-separator 'telephone-line-gradient
	   telephone-line-secondary-right-separator 'telephone-line-nil)
     (setq telephone-line-height 24
	   telephone-line-evil-use-short-tag t)

     (telephone-line-mode 1)
   #+END_SRC
** Window size
   #+BEGIN_SRC emacs-lisp
     (if (display-graphic-p)
	 (progn
	   (setq initial-frame-alist
		 '(
		   (tool-bar-lines . 0)
		   (width . 230) ; chars
		   (height . 65) ; lines
		   (left . 50)
		   (top . 50)))
	   (setq default-frame-alist
		 '(
		   (tool-bar-lines . 0)
		   (width . 230)
		   (height . 65)
		   (left . 50)
		   (top . 50))))
       (progn
	 (setq initial-frame-alist '( (tool-bar-lines . 0)))
	 (setq default-frame-alist '( (tool-bar-lines . 0)))))
   #+END_SRC
** Font
   #+BEGIN_SRC emacs-lisp
   (add-to-list 'default-frame-alist '(font . "Fira Code-14"))
   #+END_SRC
* try
* which key
  #+BEGIN_SRC emacs-lisp
  (which-key-mode 1)
  #+END_SRC
* Org mode
* Ace windows for easy window switching
* Swiper / Ivy / Counsel
  #+BEGIN_SRC emacs-lisp
    (ivy-mode 1)

    (setq ivy-use-virtual-buffers t)
    (setq ivy-count-format "(%d/%d) ")

    (global-set-key (kbd "C-s") 'swiper)
    (global-set-key (kbd "M-x") 'counsel-M-x)
    (global-set-key (kbd "C-x C-f") 'counsel-find-file)
    (global-set-key (kbd "<f1> f") 'counsel-describe-function)
    (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
    (global-set-key (kbd "<f1> l") 'counsel-find-library)
    (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
    (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
  #+END_SRC
* Avy - navigate by searching for a letter on the screen and jumping to it
** Go to char
   #+BEGIN_SRC emacs-lisp
   (global-set-key (kbd "C-:") 'avy-goto-char)
   #+END_SRC
* Autocomplete
  #+BEGIN_SRC emacs-lisp
  (use-package auto-complete
    :ensure t
    :init
    (progn
      (ac-config-default)
      (global-auto-complete-mode t)
      ))
  #+END_SRC
* Themes
  #+BEGIN_SRC emacs-lisp
  (load-theme 'darktooth t)
  #+END_SRC
